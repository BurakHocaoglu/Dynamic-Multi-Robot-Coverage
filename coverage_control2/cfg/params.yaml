# coverage_boundary: [[-80., 60.], [-20., 60.], [-20., 40.], [20., 40.], 
#                     [20., 60.], [80., 60.], [80., 40.], [40., 40.], 
#                     [40., 20.], [80., 20.], [80., -40.], [40., -40.], 
#                     [40., -60.], [80., -60.], [80., -80.], [20., -80.], 
#                     [20., -60.], [-20., -60.], [-20., -80.], [-80., -80.], 
#                     [-80., -60.], [-40., -60.], [-40., -20.], [0., -20.], 
#                     [0., 20.], [-80., 20.]]

# coverage_boundary: [[80., 100.], [50., 90.], [40., 60.], [10., 60.], 
#                     [20., 90.], [-20., 90.], [-50., 70.], [-20., 40.], 
#                     [-40., 10.], [-80., 10.], [-80., -40.], [10., -30.], 
#                     [10., -20.], [30., 10.], [30., -30.], [80., -40.], [70., 20.]]

# coverage_boundary: [[80., 100.], [80., -40.], [-80., -40.], [-80., 100.]]

# Coverage boundary (~ outer boundary should be simple and counter-clockwise oriented)
# coverage_boundary: [[80., 80.], [-80., 80.], [-80., -80.], [80., -80.]]

# coverage_boundary: [[30., 50.], [40., 20.], [60., 10.], [100., 40.], [90., 70.], [50., 70.]]

# Convex irregular hexagon
# coverage_boundary: [[-20., 50.], [-50., 20.], [-40., -20.], [10., -50.], [40., 10.], [30., 40.]]

# Concave irregular polygon with 11 vertices
# coverage_boundary: [[30., -20.], [30., -40.], [10., -50.], [40., -60.], [20., -110.], [40., -90.], 
#                     [90., -100.], [70., -80.], [80., -50.], [70., -10.], [50., -30.]]

# Room with obstacles outer boundary
# coverage_boundary: [[-100., 90.], [-100., -70.], [-20., -70.], [-20., 90.]]

# Room with all obstacles integrated, but one
# coverage_boundary: [[-100., 90.], [-100., 70.], [-70., 70.], [-70., 64.], 
#                     [-100., 64.], [-100., 26.], [-72., 26.], [-72., 38.], 
#                     [-66., 38.], [-66., 22.], [-100., 22.], [-100., -70.], 
#                     [-80., -70.], [-80., -22.], [-74., -22.], [-74., -48.], 
#                     [-54., -48.], [-54., -54.], [-74., -54.], [-74., -70.], 
#                     [-20., -70.], [-20., 10.], [-60., 10.], [-60., 14.], 
#                     [-20., 14.], [-20., 52.], [-50., 52.], [-50., 56.], 
#                     [-20., 56.], [-20., 90.], [-56., 90.], [-56., 74.], 
#                     [-60., 74.], [-60., 90.]]

# Weird E letter
# coverage_boundary: [[-90., 120.], [-90., 10.], [-10., 10.], [-10., 20.], 
#                     [-80., 20.], [-80., 40.], [-10., 40.], [-10., 60.], 
#                     [-80., 50.], [-80., 70.], [-30., 60.], [-20., 80.], 
#                     [-80., 80.], [-80., 90.], [-10., 90.], [-10., 100.], 
#                     [-80., 100.], [-80., 110.], [-10., 110.], [-10., 120.]]

# Six (6) shape with hole
# coverage_boundary: [[-80., 130.], [-80., 10.], [20., 10.], [20., 80.], 
#                     [-70., 80.], [-70., 120.], [20., 120.], [20., 130.]]

# Ugly environment
coverage_boundary: [[80., 140.], [120., 100.], [80., 100.], [20., 140.], 
                    [40., 60.], [-40., 40.], [80., -20.], [80., 80.], 
                    [160., -20.], [140., 80.], [300., 20.], [300., 120.], 
                    [260., 60.], [180., 80.], [160., 180.], [320., 160.], 
                    [140., 220.], [140., 120.]]

# Coverage obstacles should be simple and clockwie oriented
coverage_obstacles:
    obs: [[-2220., -2190.], [-2190., -2220.], [-2210., -2230.], [-2240., -2190.]]
    #################
    # obs: [[60., -60.], [-60., -60.], [-60., 60.], [60., 60.]]
    #################
    # obs: [[-70., 70.], [10., 70.], [10., 20.], [-70., 20.]]
    #################
    # obs1: [[-20., 10.], [10., -20.], [-10., -30.], [-40., 10.]]
    # obs2: [[-20., 40.], [0., 30.], [0., 20.], [-40., 30.]]
    # obs3: [[-40., -10.], [-30., -30.], [-50., -20.], [-50., -10.]]
    #################
    # obs1: [[-60., 60.], [-20., 60.], [-20., 20.], [-60., 20.]]
    # obs2: [[20., 60.], [60., 60.], [60., 20.], [20., 20.]]
    # obs3: [[20., -20.], [60., -20.], [60., -60.], [20., -60.]]
    # obs4: [[-60., -20.], [-20., -20.], [-20., -60.], [-60., -60.]]
    # obs5: [[-10., 10.], [10., 10.], [10., -10.], [-10., -10.]]
    #################
    # obs1: [[-20., 50.], [-20., 40.], [20., 40.], [20., 50.]]
    # obs2: [[60., 40.], [40., 40.], [40., 20.], [60., 20.]]
    # obs3: [[60., -40.], [40., -40.], [40., -60.], [70., -60.]]
    # obs4: [[20., -70.], [20., -60.], [-20., -60.], [-20., -73.]]
    # obs5: [[-68., -60.], [-40., -60.], [-40., -20.], [0., -20.], [0., 20.], [-68., 20.]]
    #################
    # obs1: [[50., 90.], [40., 60.], [10., 60.], [20., 90.]]
    # obs2: [[10., 10.], [30., 10.], [30., -30.], [10., -30.]]
    # obs3: [[-70., 20.], [-40., 10.], [-70., -30.]]
    # obs4: [[-20., 90.], [-20., 40.], [-50., 70.]]
    #################
    # Room with obstacles
    # obs1: [[-60., 87.], [-56., 87.], [-56., 74.], [-60., 74.]]
    # obs2: [[-97., 70.], [-70., 70.], [-70., 64.], [-97., 64.]]
    # obs3: [[-50., 56.], [-22., 56.], [-22., 53.], [-50., 53.]]
    # obs4: [[-98., 26.], [-72., 26.], [-72., 37.], [-66., 37.], [-66., 23.], [-98., 23.]]
    # obs5: [[-60., 14.], [-24., 14.], [-24., 9.], [-60., 9.]]
    # obs6: [[-52., -14.], [-28., -14.], [-28., -30.], [-32., -30.], [-32., -17.], [-52., -17.]]
    # obs7: [[-80., -22.], [-74., -22.], [-74., -48.], [-54., -48.], 
    #        [-54., -54.], [-74., -54.], [-74., -68.], [-80., -68.]]
    #################
    # Room with all obstacles integrated, but one
    # obs1: [[-52., -14.], [-28., -14.], [-28., -30.], [-32., -30.], [-32., -17.], [-52., -17.]]

motion_params:
    delta_t: 1.
    attraction_const: 0.8
    repulsion_const: 0.8
    vmax: 1.
    umax: 0.5
    wmax: 0.5236 # pi / 6.
    # wmax: 1.5708 # pi / 2.
    physical_radius: 0.5
    safe_radius: 2.
    K_linear: 1.
    K_angular: 1.
    K_repulsion: 0.
    K_attraction: 0.
    K_goal: 0.2

sensing_params:
    sense_fp_phys_rad_scale: 8.
    sigma_local: 2.
    sense_radius: 7.
    hfov_range_deg: 180.

behaviours:
    stationary: false
    limited_sensing: false
    flocking: false
    planning: true
    visibility: true
    voronoi: true

# centroid_alg: "frontier_focused"
# centroid_alg: "geodesic_approximate"
# centroid_alg: "geometric"
# centroid_alg: "grid_based"
centroid_alg: "continuous_dijkstra"

agent_init_rand_seed: 120

debug:
    exec_time_log: true